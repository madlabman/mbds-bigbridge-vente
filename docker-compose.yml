version: '3'

services:

  # Riak
  # @see https://docs.docker.com/engine/examples/running_riak_service/
  kv:
    build:
      context: ./riak
      dockerfile: ./Dockerfile
    volumes:
      - db_kv:/var/lib/riak
    ports:
      - 8087:8087 # pbc
      - 8098:8098 # http

  # NEO4J 
  # @see https://neo4j.com/developer/docker-run-neo4j/
  graph:
    image: neo4j:3.5.4
    environment:
      NEO4J_AUTH: neo4j/neo4jpa55
      NEO4J_dbms_active__database: shop.db
      NEO4J_dbms_directories_data: /var/lib/neo4j/data
    volumes:
      - db_graph:/var/lib/neo4j/data
      - ./data:/import
      - ./cli:/app
    ports:
      - 7474:7474 # http
      - 7687:7687 # bolt

  # Cassandra
  # @see https://docs.docker.com/samples/library/cassandra/
  column:
    image: cassandra:3.11.4
    volumes:
      - db_column:/var/lib/cassandra
      - ./data:/import
    ports:
      - 9042:9042 # cql

  # Mongo
  # @see https://docs.docker.com/samples/library/mongo/
  document:
    image: mongo:4.1.10-bionic
    volumes:
      - db_document:/data/db
    ports:
      - 27017:27017

  # @see https://github.com/oracle/docker-images/tree/master/OracleDatabase/SingleInstance
  # @see https://sqlmaria.com/2017/04/27/oracle-database-12c-now-available-on-docker/
  oracle:
    image: oracle/database:12.2.0.1-se2
    environment:
      ORACLE_PWD: orclpa55
    volumes:
      - db_oracle:/opt/oracle/oradata
    ports:
      - 1521:1521 # listener
 
  # Created for executing all commands
  # Provide prepared environment
  cli:
    build:
      context: ./cli
      dockerfile: ./Dockerfile
    volumes:
      - ./cli:/app
      - ./data:/data

  # Hive
  # @see https://github.com/big-data-europe/docker-hive

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - 50070:50070
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - 50075:50075
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - 10000:10000
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - 9083:9083
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0

volumes:
  # To store data
  db_kv:
  db_column:
  db_graph:
  db_document:
  db_oracle:
  # Hive
  namenode:
  datanode:
